<div class="container mt-5">
  <h2>Attendance Records for <%= dept  %></h2>

  <div class="form-group row">
    <div class="col-md-3">
      <label for="yearDropdown">Year of Study</label>
      <select id="yearDropdown" class="form-control">
        <option value="">All Years</option>
        <%  const uniqueYears = records.reduce((acc, record) => {
          if (!acc.includes(record.YearOfStudy)) {
            acc.push(record.YearOfStudy);
          }
          return acc;
        }, []);  
        uniqueYears.sort();
        %>
        <% uniqueYears.forEach(year => { %>
        <option value="<%= year %>">
          <%= year %>
        </option>
        <% }); %>
      </select>
    </div>
    <div class="col-md-3">
      <label for="sectionDropdown">Section</label>
      <select id="sectionDropdown" class="form-control" disabled>
        <option value="">All Sections</option>
        <%  const uniqueSections = records.reduce((acc, record) => {
          if (!acc.includes(record.Section)) {
            acc.push(record.Section);
          }
          return acc;
        }, []);  
        uniqueSections.sort();
        %>
        <% uniqueSections.forEach(section => { %>
        <option value="<%= section %>">
          <%= section %>
        </option>
        <% }); %>
      </select>
    </div>
    <div class="col-md-3">
      <label for="dateFilter">From Date</label>
      <input type="date" id="dateFilter" class="form-control">
    </div>
    <div class="col-md-3">
      <label for="dateFilter1">To Date</label>
      <input type="date" id="dateFilter1" class="form-control">
    </div>
  </div>

  <label class="switch">
    <div class="font-weight-bold">Condensed view - </div>
    <input type="checkbox" id="joinByClassSwitch">
    <span for="joinByClassSwitch" class="slider round"></span>
  </label>

  <table class="table table-striped mt-4" id="detailedTable">
    <thead class="thead-dark">
      <tr>
        <th>Reg. No.</th>
        <th>Name</th>
        <th>Year of Study</th>
        <th>Section</th>
        <th>Date and Time</th>
        <th>Reason</th>
      </tr>
    </thead>
    <tbody id="attendanceTable">
      <% records.forEach(record => { %>
      <tr>
        <td><%= record.Reg_No %></td>
        <td><%= record.Student_name %></td>
        <td><%= record.YearOfStudy %></td>
        <td><%= record.Section %></td>
        <td><%= new Date(record.Late_Date).toLocaleDateString('en-GB', { month: 'short', day: 'numeric', year: 'numeric' , hour: '2-digit', minute: '2-digit'}) %></td>
        <td><%= record.Reason %></td>
      </tr>
      <% }); %>
    </tbody>
  </table>

  <table class="table table-striped mt-4 d-none" id="summaryTable">
    <thead class="thead-dark">
      <tr>
        <th>Year of Study</th>
        <th>Section</th>
        <th>Count</th>
      </tr>
    </thead>
    <tbody id="summaryTableBody">
    </tbody>
  </table>
</div>
<script>
  const allRecords = <%- JSON.stringify(records) %>;

  document.addEventListener('DOMContentLoaded', function() {
    const yearDropdown = document.getElementById('yearDropdown');
    const sectionDropdown = document.getElementById('sectionDropdown');
    const dateFilter = document.getElementById('dateFilter');
    const dateFilter1 = document.getElementById('dateFilter1');
    const joinByClassSwitch = document.getElementById('joinByClassSwitch'); // Switch element for joining records by class
    const detailedTable = document.getElementById('detailedTable');
    const summaryTable = document.getElementById('summaryTable');
    const summaryTableBody = document.getElementById('summaryTableBody');

    function filterRecords() {
      const year = yearDropdown.value;
      const section = sectionDropdown.value;
      const date = dateFilter.value;
      const date1 = dateFilter1.value;
      const tableBody = document.getElementById('attendanceTable');
      tableBody.innerHTML = '';

      const filteredRecords = allRecords.filter(record => {
        const matchesYear = year === '' || record.YearOfStudy.toString() === year;
        const matchesSection = section === '' || record.Section === section;
        recordDate = new Date(record.Late_Date).toISOString().slice(0, 10)
        const matchesDateRange = (date === '' && date1 === '') ||
          (date !== '' && date1 === '' && recordDate >= date) ||
          (date === '' && date1 !== '' && recordDate <= date1) ||
          (date !== '' && date1 !== '' && recordDate >= date && recordDate <= date1);
        return matchesYear && matchesSection && matchesDateRange;
      });
      if (joinByClassSwitch.checked) {
        detailedTable.classList.add('d-none');
        summaryTable.classList.remove('d-none');
        createSummaryTable(filteredRecords);
      } else {
        detailedTable.classList.remove('d-none');
        summaryTable.classList.add('d-none');
        filteredRecords.forEach(record => {
          const row = `<tr>
                    <td>${record.Reg_No}</td>
                    <td>${record.Student_name}</td>
                    <td>${record.YearOfStudy}</td>
                    <td>${record.Section}</td>
                    <td>${new Date(record.Late_Date).toLocaleDateString('en-GB', { month: 'short', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit' })}</td>
                    <td>${record.Reason}</td>
                </tr>`;
          tableBody.insertAdjacentHTML('beforeend', row);
        });
      }
    }



    function createSummaryTable(records) {
      summaryTableBody.innerHTML = '';
      const summary = records.reduce((acc, record) => {
        const key = `${record.YearOfStudy}-${record.Section}`;
        if (!acc[key]) {
          acc[key] = {
            YearOfStudy: record.YearOfStudy,
            Section: record.Section,
            Count: 0
          };
        }
        acc[key].Count++;
        return acc;
      }, {});
      const department = "<%= dept %>".toLocaleLowerCase();
      Object.values(summary).forEach(record => {
        const row = `<tr onclick="window.location.href = 'records/${department}/${record.YearOfStudy}/${record.Section}'" class="table_link" data-toggle="tooltip" data-placement="right" title="Click for detailed info" data-bs-original-title="Click for detailed info">
        <td>${record.YearOfStudy}</td>
        <td>${record.Section}</td>
        <td>${record.Count}</td>
      </tr>`;
        summaryTableBody.insertAdjacentHTML('beforeend', row);
      });
    }

    yearDropdown.addEventListener('change', () => {
      sectionDropdown.disabled = yearDropdown.value === "";
      filterRecords();
    });
    sectionDropdown.addEventListener('change', filterRecords);
    dateFilter.addEventListener('change', filterRecords);
    dateFilter1.addEventListener('change', filterRecords);
    joinByClassSwitch.addEventListener('change', filterRecords);
  });
</script>